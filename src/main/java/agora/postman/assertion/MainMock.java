package agora.postman.assertion;

import agora.postman.assertion.model.postmanCollection.PostmanCollection;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import io.swagger.v3.oas.models.OpenAPI;

import java.io.FileWriter;
import java.io.IOException;

import static agora.postman.assertion.Main.getOpenAPISpecification;
import static agora.postman.assertion.Main.getOutputPath;

/**
 * @author Juan C. Alonso
 * This class is used to perform experiment 2. It takes the same inputs as Main.java, with an additional file
 * containing the mutated API responses (generated by JSONMutator). The execution result will be a Postman collection
 * containing the tests mocked with the values of the mutated test cases
 */
public class MainMock {

    private static String openApiSpecPath = "src/main/resources/JSONMutator/oas_omdb.yaml";

    private static String invariantsPath = "src/main/resources/JSONMutator/omdb_invariants.csv";

    private static String mutantsPath = "src/main/resources/JSONMutator/omdb_mutants.csv";

    public static void main(String[] args) {

        // Read OAS from file
        OpenAPI specification = getOpenAPISpecification(openApiSpecPath);

        // TODO: Same TODOs as Main.java
        // Create PostmanCollection
        PostmanCollection postmanCollection = new PostmanCollection(specification, invariantsPath, mutantsPath);

        // Output path
        String outputPath = getOutputPath(specification.getInfo().getTitle() + ".json", openApiSpecPath);

        // Create Gson instance
        Gson gson = new GsonBuilder().setPrettyPrinting().create();

        try(FileWriter fileWriter = new FileWriter(outputPath)) {
            // Convert POJO to JSON and write to file
            gson.toJson(postmanCollection, fileWriter);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }


    }

}
