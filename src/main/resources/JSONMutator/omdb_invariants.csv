pptname;invariant;invariantType;variables;postmanAssertion;tp
/&searchByIdOrTitle&200&Ratings():::EXIT;return.Source one of { "Internet Movie Database", "Metacritic", "Rotten Tomatoes" };daikon.inv.unary.string.OneOfString;(return.Source);pm.expect(["Internet Movie Database", "Metacritic", "Rotten Tomatoes"].includes(return_Source)).to.be.true;1
/&searchByIdOrTitle&200():::EXIT;input.i == return.imdbID;daikon.inv.binary.twoString.StringEqual;(input.i, return.imdbID);pm.expect(input_i).to.eql(return_imdbID);1
/&searchByIdOrTitle&200():::EXIT;return.Response == "True";daikon.inv.unary.string.OneOfString;(return.Response);pm.expect(["True"].includes(return_Response)).to.be.true;1
/&searchByIdOrTitle&200():::EXIT;LENGTH(return.Response)==4;daikon.inv.unary.string.FixedLengthString;(return.Response);pm.expect(return_Response).to.have.length(4);1
/&searchByIdOrTitle&200():::EXIT;LENGTH(return.Released)==11;daikon.inv.unary.string.FixedLengthString;(return.Released);pm.expect(return_Released).to.have.length(11);1
/&searchByIdOrTitle&200():::EXIT;return.Poster is Url;daikon.inv.unary.string.IsUrl;(return.Poster);pm.expect(return_Poster).to.match(/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[\w\u00a1-\uffff0-9]+-?)*[\w\u00a1-\uffff0-9]+)(?:\.(?:[\w\u00a1-\uffff0-9]+-)*[\w\u00a1-\uffff0-9]+)*(?:\.(?:[a-zA-Z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/);1
/&searchByIdOrTitle&200():::EXIT;return.Metascore is Numeric;daikon.inv.unary.string.IsNumeric;(return.Metascore);pm.expect(return_Metascore).to.match(/^[+-]{0,1}(0|([1-9](\d*|\d{0,2}(,\d{3})*)))?(\.\d*[0-9])?$/);1
/&searchByIdOrTitle&200():::EXIT;return.imdbRating is Numeric;daikon.inv.unary.string.IsNumeric;(return.imdbRating);pm.expect(return_imdbRating).to.match(/^[+-]{0,1}(0|([1-9](\d*|\d{0,2}(,\d{3})*)))?(\.\d*[0-9])?$/);1
/&searchByIdOrTitle&200():::EXIT;return.imdbVotes is Numeric;daikon.inv.unary.string.IsNumeric;(return.imdbVotes);pm.expect(return_imdbVotes).to.match(/^[+-]{0,1}(0|([1-9](\d*|\d{0,2}(,\d{3})*)))?(\.\d*[0-9])?$/);1
/&searchByIdOrTitle&200():::EXIT;return.Type one of { "episode", "movie", "series" };daikon.inv.unary.string.OneOfString;(return.Type);pm.expect(["episode", "movie", "series"].includes(return_Type)).to.be.true;1
/&searchByIdOrTitle&200():::EXIT;LENGTH(return.DVD)==11;daikon.inv.unary.string.FixedLengthString;(return.DVD);pm.expect(return_DVD).to.have.length(11);1
/&searchByIdOrTitle&200():::EXIT;return.Episode is Numeric;daikon.inv.unary.string.IsNumeric;(return.Episode);pm.expect(return_Episode).to.match(/^[+-]{0,1}(0|([1-9](\d*|\d{0,2}(,\d{3})*)))?(\.\d*[0-9])?$/);1
/&searchByIdOrTitle&200():::EXIT;return.Season is Numeric;daikon.inv.unary.string.IsNumeric;(return.Season);pm.expect(return_Season).to.match(/^[+-]{0,1}(0|([1-9](\d*|\d{0,2}(,\d{3})*)))?(\.\d*[0-9])?$/);1
/&searchByIdOrTitle&200():::EXIT;LENGTH(return.seriesID)==9;daikon.inv.unary.string.FixedLengthString;(return.seriesID);pm.expect(return_seriesID).to.have.length(9);1
/&searchByIdOrTitle&200():::EXIT;return.totalSeasons is Numeric;daikon.inv.unary.string.IsNumeric;(return.totalSeasons);pm.expect(return_totalSeasons).to.match(/^[+-]{0,1}(0|([1-9](\d*|\d{0,2}(,\d{3})*)))?(\.\d*[0-9])?$/);1